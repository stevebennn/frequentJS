{"version":3,"sources":["frequentJS.js"],"names":[],"mappings":"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","file":"frequentJS-compiled.js","sourcesContent":["// returns the specified number of characters starting from the left.\n// String.prototype.left = function(num) { return this.slice(0,num) };\n\n// returns the specified number of characters starting from the right.\n// String.prototype.right = function(num) { return this.slice(this.length-num) };\n\n// returns the specified number of characters between the the starting and ending index.\n// String.prototype.mid = function(sNum,eNum) { return this.substring((eNum+sNum-1),(sNum-1)) };\n\n// returns the string in lowercase.\n// String.prototype.lower = function() { return this.toLowerCase() };\n\n// returns the string in uppercase.\nString.prototype.upper = function() { return this.toUpperCase() };\n\n// returns the specified number of characters in uppercase starting from either the left,right or middle.\nString.prototype.upperFrom = function(dir,num,num2) {\n    switch (dir){\n        case 'left': return this.left(num).upper() + this.right(this.length-num);\n            break;\n        case 'mid' : return this.left(num-1) + this.mid(num,num2).upper() + this.right(this.length-num2-1);\n            break;\n        case 'right' : return this.left(this.length-num) + this.right(num).upper();\n            break;\n    }\n};\n\n// returns true or false if the string exists in the array passed.\nString.prototype.exists = function(arr) { return arr.indexOf(this) != -1 };\n\n// returns the string truncated after character limit is met.\nString.prototype.truncate = function(num){\n    return this.length > num ? this.left(num) + \"...\" : this;\n};\n\n// returns an array using spaces as the delimiter.\nString.prototype.toArray = function() {\n    return this.split(\" \");\n};\n\n// returns the value of a key in a array of object literals.\nString.prototype.lookup = function(arr) {\n    let self = this;\n    return arr.find(function(arr){\n        return arr[self]\n    })[self]\n};\n\n// returns the word specified by index ( does not use a 0 index )\nString.prototype.word = function(num) { return this.split(\" \")[num-1]; };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet fq = (function() {\n\n    let methods =  {};\n    let _arg = \"\";\n\n    methods.val = _arg;\n\n    // snagging the value we want to manipulate\n    methods.request = function(arg) {\n        this.val = arg;\n        return this;\n    };\n\n    //\n    methods.left = function(num) {\n        this.val = this.val.slice(0,num);\n        return this\n\n    };\n\n    methods.right = function(num) {\n        this.val = this.val.slice(0,num);\n        return this\n\n    };\n\n    methods.mid = function(sNum,eNum) {\n        this.val = this.val.substring((eNum+sNum-1),(sNum-1));\n        return this\n    }\n\n    methods.val = function() {\n        return this.val;\n    }\n\n    return methods;\n\n})();\n\n\nconsole.log(fq.request('asdf').mid(2,2).left(1).val);"]}