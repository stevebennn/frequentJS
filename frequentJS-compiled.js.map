{"version":3,"sources":["frequentJS.js"],"names":[],"mappings":";;;AACA,OAAO,SAAP,CAAiB,IAAjB,GAAwB,UAAS,GAAT,EAAc;AAAE,WAAO,KAAK,KAAL,CAAW,CAAX,EAAa,GAAb,CAAP;AAA0B,CAAlE;;;AAGA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAS,GAAT,EAAc;AAAE,WAAO,KAAK,KAAL,CAAW,KAAK,MAAL,GAAY,GAAvB,CAAP;AAAoC,CAA7E;;;AAGA,OAAO,SAAP,CAAiB,GAAjB,GAAuB,UAAS,IAAT,EAAc,IAAd,EAAoB;AAAE,WAAO,KAAK,SAAL,CAAgB,OAAK,IAAL,GAAU,CAA1B,EAA8B,OAAK,CAAnC,CAAP;AAA+C,CAA5F;;;AAGA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW;AAAE,WAAO,KAAK,WAAL,EAAP;AAA2B,CAAjE;;;AAGA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW;AAAE,WAAO,KAAK,WAAL,EAAP;AAA2B,CAAjE;;;AAGA,OAAO,SAAP,CAAiB,SAAjB,GAA6B,UAAS,GAAT,EAAa,GAAb,EAAiB,IAAjB,EAAuB;;AAEhD,YAAQ,GAAR;AACI,aAAK,MAAL;AAAa,mBAAO,KAAK,IAAL,CAAU,GAAV,EAAe,KAAf,KAAyB,KAAK,KAAL,CAAW,KAAK,MAAL,GAAY,GAAvB,CAAhC;AACT;AACJ,aAAK,KAAL;AAAa,mBAAO,KAAK,IAAL,CAAU,MAAI,CAAd,IAAmB,KAAK,GAAL,CAAS,GAAT,EAAa,IAAb,EAAmB,KAAnB,EAAnB,GAAgD,KAAK,KAAL,CAAW,KAAK,MAAL,GAAY,IAAZ,GAAiB,CAA5B,CAAvD;AACT;AACJ,aAAK,OAAL;AAAe,mBAAO,KAAK,IAAL,CAAU,KAAK,MAAL,GAAY,GAAtB,IAA6B,KAAK,KAAL,CAAW,GAAX,EAAgB,KAAhB,EAApC;AACX;AANR;AAQH,CAVD;;;AAaA,OAAO,SAAP,CAAiB,MAAjB,GAA0B,UAAS,GAAT,EAAc;AAAE,WAAO,IAAI,OAAJ,CAAY,IAAZ,KAAqB,CAAC,CAA7B;AAAgC,CAA1E;;;AAGA,OAAO,SAAP,CAAiB,QAAjB,GAA4B,UAAS,GAAT,EAAa;AACrC,WAAO,KAAK,MAAL,GAAc,GAAd,GAAoB,KAAK,IAAL,CAAU,GAAV,IAAiB,KAArC,GAA6C,IAApD;AACH,CAFD;;;AAKA,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAW;AAClC,WAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACH,CAFD;;;AAKA,OAAO,SAAP,CAAiB,MAAjB,GAA0B,UAAS,GAAT,EAAc;AACpC,QAAI,OAAO,IAAX;AACA,WAAO,IAAI,IAAJ,CAAS,UAAS,GAAT,EAAa;AACzB,eAAO,IAAI,IAAJ,CAAP;AACH,KAFM,EAEJ,IAFI,CAAP;AAGH,CALD","file":"frequentJS-compiled.js","sourcesContent":["// returns the specified number of characters starting from the left.\nString.prototype.left = function(num) { return this.slice(0,num) };\n\n// returns the specified number of characters starting from the right.\nString.prototype.right = function(num) { return this.slice(this.length-num) };\n\n// returns the specified number of characters between the the starting and ending index.\nString.prototype.mid = function(sNum,eNum) { return this.substring((eNum+sNum-1),(sNum-1)) };\n\n// returns the string in lowercase.\nString.prototype.lower = function() { return this.toLowerCase() };\n\n// returns the string in uppercase.\nString.prototype.upper = function() { return this.toUpperCase() };\n\n// returns the specified number of characters in uppercase starting from the right.\nString.prototype.upperFrom = function(dir,num,num2) {\n\n    switch (dir){\n        case 'left': return this.left(num).upper() + this.right(this.length-num);\n            break;\n        case 'mid' : return this.left(num-1) + this.mid(num,num2).upper() + this.right(this.length-num2-1);\n            break;\n        case 'right' : return this.left(this.length-num) + this.right(num).upper();\n            break;\n    }\n}\n\n// returns true or false if the string exists in the array passed.\nString.prototype.exists = function(arr) { return arr.indexOf(this) != -1 };\n\n// returns the string truncated after character limit is met.\nString.prototype.truncate = function(num){\n    return this.length > num ? this.left(num) + \"...\" : this;\n}\n\n// returns an array using spaces as the delimiter.\nString.prototype.toArray = function() {\n    return this.split(\" \");\n}\n\n// returns the value of a key in a array of object literals.\nString.prototype.lookup = function(arr) {\n    let self = this;\n    return arr.find(function(arr){\n        return arr[self]\n    })[self]\n};\n"]}